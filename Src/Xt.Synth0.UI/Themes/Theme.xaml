<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Xt.Synth0.UI">

    <Thickness x:Key="Margin">2</Thickness>

    <Style TargetType="{x:Type DockPanel}">
        <Setter Property="Background" Value="{DynamicResource BackgroundDarkKey}"/>
    </Style>

    <Style TargetType="{x:Type Window}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Foreground1Key}"/>
        <Setter Property="Background" Value="{DynamicResource BackgroundDarkKey}"/>
    </Style>

    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="Background" Value="{DynamicResource BackgroundKey}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ForegroundKey}"/>
        <Setter Property="Foreground" Value="{DynamicResource Foreground1Key}"/>
    </Style>

    <Style TargetType="{x:Type local:Knob}">
        <Setter Property="Margin" Value="{StaticResource Margin}"/>
        <Setter Property="RotaryStroke" Value="{DynamicResource ForegroundKey}"/>
        <Setter Property="RotaryFill" Value="{DynamicResource BackgroundLightKey}"/>
        <Setter Property="MarkerFill" Value="{DynamicResource Foreground1Key}"/>
        <Setter Property="MarkerStroke" Value="{DynamicResource Foreground1Key}"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource Foreground1Key}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.75" />
                <Setter Property="Foreground" Value="{DynamicResource Foreground1Key}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" 
                        Value="{DynamicResource FocusBackgroundKey}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TextControl" TargetType="{x:Type Control}">
        <Setter Property="Foreground" Value="{DynamicResource Foreground1Key}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.75" />
                <Setter Property="Foreground" Value="{DynamicResource Foreground1Key}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundKey}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid Margin="{StaticResource Margin}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" BorderThickness="1" CornerRadius="3,3,0,0"
                            BorderBrush="{DynamicResource ForegroundKey}"
                            Background="{DynamicResource BackgroundLightKey}">
                            <ContentPresenter Margin="{StaticResource Margin}" ContentSource="Header"/>
                        </Border>
                        <Border Grid.Row="1" BorderThickness="1,0,1,1" CornerRadius="0,0,3,3" 
                            Background="{DynamicResource BackgroundKey}" 
                            BorderBrush="{DynamicResource ForegroundKey}">
                            <ContentPresenter Margin="{StaticResource Margin}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="{StaticResource Margin}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Border Width="13" Height="13" BorderThickness="1"
                                 BorderBrush="{DynamicResource ForegroundKey}"
                                 Background="{DynamicResource BackgroundDarkKey}">
                            <Path x:Name="CheckMark" Width="7" Height="7" StrokeThickness="2"
                                  SnapsToDevicePixels="False" Data="M 0 0 L 7 7 M 0 7 L 7 0" 
                                  Stroke="{DynamicResource Foreground1Key}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="{StaticResource Margin}"/>
        <Setter Property="Foreground" Value="{DynamicResource Foreground2Key}"/>
        <Setter Property="Background" Value="{DynamicResource BackgroundButtonKey}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border" BorderThickness="1" Padding="4,2" CornerRadius="3" 
                        Background="{TemplateBinding Background}"
                        BorderBrush="{DynamicResource Foreground2Key}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.75" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" 
                                Value="{DynamicResource ButtonKey}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Width" Value="50"/>
        <Setter Property="Margin" Value="{StaticResource Margin}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="Background" Value="{DynamicResource BackgroundKey}"/>
        <Setter Property="Foreground" Value="{DynamicResource Foreground1Key}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ForegroundKey}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" SnapsToDevicePixels="True" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" 
                                      HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ForegroundKey}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ForegroundKey}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="border" Padding="{StaticResource Margin}" BorderThickness="1">
                        <ContentPresenter />
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Trigger.Setters>
                                            <Setter Property="BorderBrush" Value="{DynamicResource Foreground2Key}"/>
                                        </Trigger.Setters>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.Setters>
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ForegroundKey}"/>                               
                            </Trigger.Setters>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Margin" Value="{StaticResource Margin}"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Grid.Column="2" ClickMode="Press" Focusable="False"
                            IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="20" />
                                        </Grid.ColumnDefinitions>
                                        <Border Grid.ColumnSpan="2" BorderThickness="1"
                                            BorderBrush="{DynamicResource ForegroundKey}" 
                                            Background="{DynamicResource BackgroundKey}" />
                                        <Path Grid.Column="1" VerticalAlignment="Center"
                                            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                                            HorizontalAlignment="Center" Fill="{DynamicResource ForegroundKey}" />
                                    </Grid>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ContentPresenter Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}"/>
                        <Popup Placement="Bottom" Focusable="False" PopupAnimation="Slide"
                               IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}">
                            <Grid SnapsToDevicePixels="True"
                                MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                <Border Margin="0, 1, 0, 0" BorderThickness="1" 
                                    Background="{DynamicResource BackgroundDarkKey}"
                                    BorderBrush="{DynamicResource ForegroundKey}"/>
                                <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Label}" BasedOn="{StaticResource TextControl}"/>
    <Style TargetType="{x:Type local:AmpBox}" BasedOn="{StaticResource TextControl}"/>
    <Style TargetType="{x:Type local:HexBox}" BasedOn="{StaticResource TextControl}"/>

</ResourceDictionary>